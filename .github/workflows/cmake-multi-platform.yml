name: BMS_STM32L152RE Build Workflow

on:
  push:
    branches: [ "SCRUM-20-Implement-Mosfet-control-code" ]
  pull_request:
    branches: [ "SCRUM-20-Implement-Mosfet-control-code" ]
  workflow_dispatch:  # Enable manual trigger

env:
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        type: [Debug, Release, Test]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install arm-none-eabi-gcc
      run: |
        curl -L -o gcc-arm-none-eabi.zip https://developer.arm.com/-/media/Files/downloads/gnu-rm/10.3-2021.10/gcc-arm-none-eabi-10.3-2021.10-win32.zip
        mkdir gcc-arm
        tar -xf gcc-arm-none-eabi.zip -C gcc-arm --strip-components=1
        echo "Adding GCC to PATH"
        echo "C:\\gcc-arm\\bin" >> $env:GITHUB_PATH
        $env:PATH = "C:\\gcc-arm\\bin;" + $env:PATH

    - name: Install Ninja
      uses: seanmiddleditch/gha-setup-ninja@v4

    - name: Check CMake version
      run: cmake --version

    - name: Build Project
      shell: pwsh  # Use PowerShell Core to execute the script
      run: |
        cd .\firmware\BMSServerApp
        $buildType = "${{ matrix.type }}"
        if ($buildType -eq "Test") {
          cmake -Bbuild -GNinja -DCMAKE_TOOLCHAIN_FILE="../toolchain.cmake" -DCMAKE_BUILD_TYPE="Debug" -DTEST=ON
        } else {
          cmake -Bbuild -GNinja -DCMAKE_TOOLCHAIN_FILE="../toolchain.cmake" -DCMAKE_BUILD_TYPE="$buildType"
        }
        cmake --build build

    - name: Convert ELF to BIN
      run: |
        cd .\firmware\BMSServerApp\build
        arm-none-eabi-objcopy -O binary BMSServerApp.elf BMSServerApp-${{ matrix.type }}.bin

    - name: Upload Binary File
      uses: actions/upload-artifact@v4
      with:
        name: BMSServerApp-${{ matrix.type }}-bin
        path: .\firmware\BMSServerApp\build\BMSServerApp-${{ matrix.type }}.bin
